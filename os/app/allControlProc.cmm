/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2020 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * shellProc.cmm : MP3 プレーヤのメインプロセス
 *
 * 2020.09.07 : 新規作成
 *
 * $Id$
 *
 */
#include <fs.hmm>
#include "appUtil.hmm"

#include <stdlib.hmm>
#include <kernel.hmm>
#include <util.hmm>
#include "display.hmm"
#include "musicPlayProc.hmm"
#include "spi.hmm"
#include "fileControl.hmm"
#include "allControlProc.hmm"

//-----------------------------------------------------------------------------
// スイッチの読み取り
//-----------------------------------------------------------------------------
// 押しボタンスイッチのビット
#define SW1 0x20
#define SW2 0x10
#define SW3 0x08
#define SW4 0x04
#define SW5 0x02
#define SW6 0x01
#define SWS 0x3f                                    // スイッチのビット全部

int sw0 = 0x00;                                     // 前回の状態(デバウンス前)
int sw1 = 0x00;                                     // 前回の状態(デバウンス後)

int scene = 0; //0:title, 1:playlist 2:album 3artist 4:allsong 5:menu 6:sleepTimer
int pt=2; //pointer 2:一番上, 増えると下へ
char[][] dispList; //リスト表示用

char[][] playListString; // ={"list1","list2","list3".null}
int readSw() {
  int sw = ~in(0x18) & SWS;                         // スイッチを読み正論理に変換
  int swd = sw & sw0;                               // デバウンス
  int sw2 = (sw1 ^ swd) & swd;                      // 今回，新たに押されたSW
  sw0 = sw;
  sw1 = swd;
  return sw2;
}

int swToNum(int sw) {
  int num = -1;
  if ((sw & SW6)!=0) {                              // 6 番のスイッチが押された
    num = 6;
  } else if ((sw & SW5)!=0) {                       // 5 番のスイッチが押された
    num = 5;
  } else if ((sw & SW4)!=0) {                       // 4 番のスイッチが押された
    num = 4;
  } else if ((sw & SW3)!=0) {                       // 3 番のスイッチが押された
    num = 3;
  } else if ((sw & SW2)!=0) {                       // 2 番のスイッチが押された
    num = 2;
  } else if ((sw & SW1)!=0) {                       // 1 番のスイッチが押された
    num = 1;
  }
  return num;
}
 

//-----------------------------------------------------------------------------
// 画面表示
//-----------------------------------------------------------------------------

void number1(int i) {
  locateXY(7,4);
  putDec(i,1);
}

void number2(int i){
  locateXY(8,4);
  putDec(i,1);
}


void asta(int y) {                                  // カーソルの表示
  locateXY(0, y);
  putCh('*');
}    

void astaT(int i) {
  if(i==0) {
    locateXY(7,3);
    putCh('*');
  } else if (i==1) {
    locateXY(7,5);
    putCh('*');
  } else if (i==2) {
    locateXY(8,3);
    putCh('*');
  } else if (i==3) {
    locateXY(8,5);
    putCh('*');
  }
}


void playlistProc(boolean first) {                               // プレイリストでの処理
  if(first){
    scene = 1;
    dispList = playListString;
    showList("PlayList", dispList);                                       // プレイリスト画面に初期化
    int pt = 2;
    asta(pt);                                     // 画面を初期化
  }

  int num = swToNum(readSw()); //ボタン入力
  if (num==1) {
    if (pt>2){ //カーソル動かせるなら
      pt=pt-1;
    }
    showList("PlayList", dispList);                  // プレイリスト画面に初期化
    asta(pt);                                    // 再生中の曲に印を表示
  } else if (num==5) {
    if (pt<7){
      pt=pt+1;
    }
    showList("PlayList", dispList);
    asta(pt);                                    // 再生中の曲に印を表示
  } else if (num==4) {                           // 6 番のスイッチが押された
    dbgPutStr("stop\n");
    mainProc(true);                                 // 画面を初期化
    stop();
  } else if (num==6) { // ファイルと対応するボタン
    int select_id = pt-2; //idx
    int fileSize = getFileSize();//曲数
    int[] songIds = getSongIdsPlaylist(select_id);//id一覧

    dispList = idsToSongNames(songIds); //曲名一覧
    setSongIds(songIds); //id一覧を登録
    allSongProc(true);//歌一覧へ
    
  }

}


void albumProc(boolean first) {                                  // アルバムでの処理
  if(first){
    scene = 2;
    dispList = getAlbumNames();
    showList("Artist", dispList);
    pt = 2;
    asta(pt);                                     // 画面を初期化
  }
  int sw = readSw();
  int num = swToNum(sw);
  if (num==1) {
    if (pt>2){
      pt=pt-1;
    }
    showList("album", dispList);
    asta(pt);                                    // 再生中の曲に印を表示
  } else if (num==5) {
    if (pt<7){
      pt=pt+1;
    }
    showList("album", dispList);
    asta(pt);                                    // 再生中の曲に印を表示
  } else if (num==4) {                                   // 6 番のスイッチが押された
    dbgPutStr("stop\n");
    mainProc(true);                                 // 画面を初期化
    stop();
  } else if (num ==6) { // ファイルと対応するボタン
    int select_id = pt-2; //idx
    int fileSize = getFileSize();//曲数
    int[] songIds = getSongIdsAlbum(select_id);//id一覧

    dispList = idsToSongNames(songIds); //曲名一覧
    setSongIds(songIds); //id一覧を登録
    allSongProc(true);//歌一覧へ
  }
}


void artistProc(boolean first) {                                 // アーティストでの処理
  if(first){
    dispList = getArtistNames();
    showList("Artist", dispList);
    scene = 3;
    pt = 2;
    asta(pt);                                     // 画面を初期化
  }
  int sw = readSw();
  int num = swToNum(sw);
  if (num==1) {
    if (pt>2){
      pt=pt-1;
    }
    showList("Artist", dispList);
    asta(pt);                                    // 再生中の曲に印を表示
  } else if (num==5) {
    if (pt<7){
      pt=pt+1;
    }
    showList("Artist", dispList);
    asta(pt);                                    // 再生中の曲に印を表示
  } else if (num==4) {                                   // 6 番のスイッチが押された
    dbgPutStr("stop\n");
    mainProc(true);                                 // 画面を初期化
    stop();
  } else if (num==6) { // ファイルと対応するボタン
    int select_id = pt-2; //idx
    int fileSize = getFileSize();//曲数
    int[] songIds = getSongIdsArtist(select_id);//id一覧

    dispList = idsToSongNames(songIds); //曲名一覧
    setSongIds(songIds); //id一覧を登録
    allSongProc(true);//歌一覧へ
  }
}


void allSongProc(boolean first) {                                // 全曲での処理
  if(first){
    scene = 4;
    showList("SongList", dispList);
    pt = 2;
    asta(pt);                                     // 画面を初期化
  }
  int sw = readSw();
  int num = swToNum(sw);
  if (num==1) {//up
    if (pt>2) pt=pt-1; //減らす
    showList("SongList", dispList);
    asta(pt);                                    // 再生中の曲に印を表示
  } else if (num==5) {//down
    if (pt<7) pt=pt+1; //増やす
    showList("SongList", dispList);
    asta(pt);                                    // 再生中の曲に印を表示
  } else if (num==4) {                                   // 6 番のスイッチが押された
    dbgPutStr("stop\n");
    mainProc(true);                                 // 画面を初期化
    stop();
  } else if (num==6) { // ファイルと対応するボタン
    int select_id = pt-2;
    int fileSize = getFileSize();//曲数
    play(select_id);

    showList("AllSong", dispList);                                 // 画面を初期化
    dbgPutStr(mp3FilesGetPath(select_id));
    dbgPutStr("\n");
  }
}


void menuProc(boolean first) {                                // メニューでの処理
  if(first){
    showMenu();
    pt = 2;
    asta(pt);                                     // 画面を初期化
    scene = 5;
  }

    int sw = readSw();
    int num = swToNum(sw);
    if (num==1) {
      if (pt>2){
        pt=pt-1;
      }
      showMenu();
      asta(pt);                                    // 再生中の曲に印を表示
    } else if (num==2) {
    } else if (num==3) {
    } else if (num==4) {
      mainProc(true);
    } else if (num==5) {
      if (pt<4){
        pt=pt+1;
      }
      showMenu();
      asta(pt);                                    // 再生中の曲に印を表示
    } else if (num==6) {                                   // 6 番のスイッチが押された
      if (pt==2){                                   // カーソルの位置がptの時

      } else if (pt==3) {

      } else if (pt==4) {
        timerProc(true);                               // アーティストに遷移
      }
    } else if (num>1 && mp3FilesGetName(num)!=null) { // ファイルと対応するボタン
      showMenu();                                 // 画面を初期化
      //play(mp3FilesGetPath(pt));                   // 再生開始
      dbgPutStr(mp3FilesGetPath(pt));
      dbgPutStr("\n");
    }
}



int flag,num1,num2;
void timerProc(boolean first) {
  if(first){
    showSleepTimer();
    pt = 2;
    flag = 0;
    num1 = 0;
    num2 = 0;
    asta(pt);
    scene = 6;
  }
    int sw = readSw();                              // スイッチ読み取り
    int num = swToNum(sw);                          // スイッチの番号を管理
    if (num==1) {   
      if (flag==0){
        if (num2<10){
          num2=num2+1;
          pt=2;
          showSleepTimer();
          astaT(pt);
          number2(num2);
        }
      } else if (flag==1){
        if(num1<10){
          num1=num1+1;
          pt=0;
          showSleepTimer();
          astaT(pt);
          number1(num1);
        }  
      }
    } else if (num==2) {                            // スイッチ２
      flag=1;
      if(pt==2){
        pt=0;
        showSleepTimer();
        astaT(pt);
      } else if (pt==3) {
        pt=1;
        showSleepTimer();
        astaT(pt);
      }
    } else if (num==3) {                            // スイッチ３
      flag=0;
      if(pt==0){
        pt=2;
        showSleepTimer();
        astaT(pt);
      } else if (pt==1) {
        pt=3;
        showSleepTimer();
        astaT(pt);
      }
    } else if (num==4) {                            // スイッチ４
      menuProc(true);
    } else if (num==5) {                            // スイッチ５
      if (flag==0){
        if (num2>=0){
          num2=num2-1;
          pt=3;
          showSleepTimer();
          astaT(pt);
          number2(num2);
        }
      } else if (flag==1){
        if(num1>=0){
          num1=num1-1;
          pt=1;
          showSleepTimer();
          astaT(pt);
          number1(num1);
        }  
      }
    } else if (num==6) {                                   // 6 番のスイッチが押された

    }

}
//main画面操作
void mainProc(boolean first){
  int num = swToNum(readSw()); //ボタン入力
    if(first){
      scene = 0;
      showMain();
      pt = 2;
      asta(pt);
    }
    if (num==1) {                                   // スイッチ１(up)の処理
      if (pt>2){                                    // カーソルの範囲制限(上方向)
        pt=pt-1;                                    // カーソル移動
      }
      showMain();                                 // 画面を初期化
      asta(pt);                                     // カーソル表示
    } else if (num==2) {                            // スイッチ２
    } else if (num==3) {                            // スイッチ３
    } else if (num==4) {                            // スイッチ４
      menuProc(true);
    } else if (num==5) {                            // スイッチ５
      if (pt<5){                                    // カーソルの範囲制限(下方向)
        pt=pt+1;                                    // カーソル移動
      }
      showMain();                                 // 画面を初期化
      asta(pt);                                     // カーソル表示
    } else if (num==6) {                                   // 6 番のスイッチが押された
      if (pt==2){                                   // カーソルの位置がptの時
        playlistProc(true);                             // プレイリストに遷移
      } else if (pt==3) {
        albumProc(true);                                // アルバムに遷移
      } else if (pt==4) {
        artistProc(true);                               // アーティストに遷移
      } else if (pt==5) {
        dispList = getSongNames();
        setSongIds(getSongIds()); //id一覧を登録
        allSongProc(true);                              // 全曲に遷移
      }
    } else if (num>1 && mp3FilesGetName(num)!=null) { // ファイルと対応するボタン
      showMain();                                 // 画面を初期化
      asta(num);                                    // 再生中の曲に印を表示
      //play(mp3FilesGetPath(num));                   // 再生開始
      dbgPutStr(mp3FilesGetPath(num));
      dbgPutStr("\n");
    }

}


//-----------------------------------------------------------------------------
// MP3 プレーヤのメインプロセス
//-----------------------------------------------------------------------------
// ここからプロセスの実行が始まる
public void shellMain() {                           // mainの処理
  spiResetLcd();                                    // sleepを使用するので
  spiResetMp3();                                    //   プロセスが実行する
  mp3FilesInit();                                   // ファイル一覧を作る
  showMain();                                     // 画面を初期化
  int pt = 2;                                       // カーソル管理用の変数
  asta(pt);                                         // asta関数でカーソル表示

  playListString = rMalloc(4);
  playListString[0]="list 1"; playListString[1]="list 2"; playListString[2] = "list 3"; playListString[3]=null;
  for (;;) {
//0:title, 1:playlist 2:album 3artist 4:allsong 5:menu 6:sleepTimer
    if(scene == 0) mainProc(false);
    else if(scene == 1) playlistProc(false);
    else if(scene == 2) albumProc(false);
    else if(scene == 3) artistProc(false);
    else if(scene == 4) allSongProc(false);
    else if(scene == 5) menuProc(false);
    else if(scene == 6) timerProc(false);
    sleep(10);
  }
}
